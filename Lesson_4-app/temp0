- name: Install and configure Node.js app with monitoring
  hosts: all # node_app
  become: true

  vars:
    ansible_user: ubuntu
    #docker_projects_dir: /home/ubuntu/docker_projects
    docker_projects_dir: /home/deployer/node-app
    prometheus_config: "{{ docker_projects_dir }}/prometheus.yml"   
    docker_compose_file: "{{ docker_projects_dir }}/docker-compose.yml"   
  tasks:
    # Docker and Docker Compose Installation Tasks
    - name: Update package index
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install dependencies for Docker
      apt:
        name:
          [
            "apt-transport-https",
            "ca-certificates",
            "gnupg",
            "software-properties-common"
          ]
        state: present

    - name: Import GPG key for Docker repository
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: 0EBFCD88

    - name: Add source list for Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
        state: present

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-compose-plugin
        state: present          

    - name: Add deployer user
      user:
        name: deployer
        groups: docker
        append: true
        shell: /bin/bash

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: true    

    - name: Ensure /home/deployer/node-app exists
      file:
        path: /home/deployer/node-app
        state: directory
        owner: deployer
        group: deployer
        mode: '0755'


    - name: Mark node-app directory as safe for git
      command: git config --global --add safe.directory /home/deployer/node-app
      become: true
    

    - name: Clone Node.js app repository using git module
      git:
        repo: https://github.com/AnastasiyaGapochkina01/node-app.git
        dest: /home/deployer/node-app
        clone: yes
        update: yes
      become: true


    - name: Ensure deployer user is in the docker group
      user:
        name: deployer
        groups: docker
        append: yes
      become: true    

    - name: Change ownership of node-app directory
      file:
        path: "/home/deployer/node-app"
        owner: deployer
        group: deployer
        recurse: yes    
      become: true  # new    

    - name: Restart Docker service
      systemd:
        name: docker
        state: restarted
        enabled: yes
     #--------------------------------------------------
    # Ensure prometheus.yml exists and is a file
    - name: Ensure prometheus.yml exists and is a file
      stat:
        path: "{{ prometheus_config }}"
      register: prometheus_stat

    - name: Fail if prometheus.yml is not a file
      fail:
        msg: "The file prometheus.yml is missing or not a regular file!"
      when: prometheus_stat.stat.isreg == false

    # Debug Prometheus config file path
    - name: Debug Prometheus configuration file path
      debug:
        msg: "Prometheus config file path: {{ prometheus_config }}"



     #---------------------------------------------------

    - name: Create Docker Compose file
      copy:
        dest: "/home/deployer/node-app/docker-compose.yml"
        content: |
          version: "3.7"

          services:
            app:
              image: node:16
              container_name: node-app
              working_dir: /app
              volumes:
                - /home/deployer/node-app:/app
              command: >
                sh -c "npm install && node server.js"
              ports:
                - "3000:3000"

            nginx:
              image: nginx:latest
              container_name: nginx-proxy
              ports:
                - "80:80"
              volumes:
                - "./nginx.conf:/etc/nginx/nginx.conf"

            node-exporter:
              image: prom/node-exporter
              container_name: node-exporter
              ports:
                - "9100:9100"

            cadvisor:
              image: gcr.io/cadvisor/cadvisor
              container_name: cadvisor
              ports:
                - "8080:8080"
              volumes:
                - "/var/run/docker.sock:/var/run/docker.sock:ro"
                - "/sys:/sys:ro"
                - "/var/lib/docker:/var/lib/docker:ro"

            prometheus:
              image: prom/prometheus
              container_name: prometheus
              ports:
                - "9090:9090"
              volumes:
                - "/home/deployer/node-app/prometheus.yml:/etc/prometheus/prometheus.yml"

    - name: Copy Nginx configuration
      copy:
        dest: "/home/deployer/node-app/nginx.conf"
        content: |
          events {}

          http {
            server {
              listen 80;
              location / {
                proxy_pass http://node-app:3000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              }
            }
          }


    - name: Start services with Docker Compose
      command: docker compose up -d
      args:
        chdir: "/home/deployer/node-app"
      become: true
   #---------------------------------------------------

    - name: Restart Prometheus container
      shell: docker restart prometheus
      become: true