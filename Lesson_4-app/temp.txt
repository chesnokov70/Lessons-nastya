pipeline {
    agent any

    environment {
        SSH_KEY_PATH_HOST = '/home/ches/.ssh/ssh_instance_key.pem'   // Path on host machine
        SSH_KEY_PATH_CONTAINER = '/var/jenkins_home/.ssh/ssh_instance_key.pem'  // Path inside container
    }

    stages {
        stage('Copy SSH Key to Jenkins Container') {
            steps {
                script {
                    // Copy SSH key to Jenkins container
                    sh "docker cp ${SSH_KEY_PATH_HOST} $(docker ps -q -f name=jenkins):${SSH_KEY_PATH_CONTAINER}"
                    // Set permissions for the key inside the container
                    sh "docker exec -it $(docker ps -q -f name=jenkins) chmod 600 ${SSH_KEY_PATH_CONTAINER}"
                    sh "docker exec -it $(docker ps -q -f name=jenkins) chmod 700 /var/jenkins_home/.ssh"
                }
            }
        }

        stage('Sparse Checkout') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'main']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[
                            $class: 'SparseCheckoutPaths',
                            sparseCheckoutPaths: [[path: 'Lesson_4-app/']]
                        ]],
                        userRemoteConfigs: [[
                            url: 'git@github.com:chesnokov70/Lessons-nastya.git',
                            credentialsId: 'ssh_github_access_key'
                        ]]
                    ])
                }
            }
        }

        stage('Install Ansible') {
            steps {
                sh '''
                apt-get update
                apt-get install -y ansible
                apt install awscli -y
                '''
            }
        }

        stage('Main Initialize and Plan') {
            steps {
                dir('Lesson_4-app/terraform') {
                    sh '''
                        terraform init
                        terraform plan -out=tfplan
                    '''
                }
            }
        }

        stage('Main Apply Infrastructure') {
            steps {
                dir('Lesson_4-app/terraform') {
                    sh '''
                        terraform apply -input=false "tfplan"
                    '''
                }
            }
        }

        stage('Setup Control Plane Ansible') {
            steps {
                dir('Lesson_4-app/ansible/') {
                    sh '''
                    ANSIBLE_SSH_ARGS="-i /var/jenkins_home/.ssh/ssh_instance_key.pem" ansible-playbook -i hosts install_node_app.yml
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}

stage('Setup Control Plane Ansible') {
    steps {
        dir('Lesson_4-app/ansible/') {
            script {
                // Ensure that the correct SSH key is used
                sh '''
                export ANSIBLE_SSH_ARGS="-i /var/jenkins_home/.ssh/ssh_instance_key.pem"
                ansible-playbook -i hosts install_node_app.yml
                '''
            }
        }
    }
}
