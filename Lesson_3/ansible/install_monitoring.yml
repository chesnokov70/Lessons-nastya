- name: Install and configure monitoring stack
  hosts: monitoring
  become: true
  tasks:

    - name: Install required packages
      apt:
        name:
          - docker.io
          - docker-compose
        state: present

    - name: Add deployer user
      user:
        name: deployer
        groups: docker
        append: true
        shell: /bin/bash

    - name: Create directories for monitoring stack
      file:
        path: "{{ item }}"
        state: directory
        owner: deployer
        group: docker
        mode: '0755'
      loop:
        - /opt/prometheus
        - /opt/grafana

    - name: Copy Prometheus configuration file
      copy:
        dest: /opt/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s

          scrape_configs:
            - job_name: 'node-exporter'
              static_configs:
                - targets: ['localhost:9100']

            - job_name: 'cadvisor'
              static_configs:
                - targets: ['localhost:8080']
        owner: deployer
        group: docker
        mode: '0644'

    - name: Start Node Exporter container
      docker_container:
        name: node-exporter
        image: prom/node-exporter
        state: started
        restart_policy: always
        ports:
          - "9100:9100"

    - name: Start cAdvisor container
      docker_container:
        name: cadvisor
        image: gcr.io/cadvisor/cadvisor
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/sys:/sys"
          - "/var/lib/docker:/var/lib/docker"

    - name: Start Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus
        state: started
        restart_policy: always
        ports:
          - "9090:9090"
        volumes:
          - "/opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"

    - name: Start Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana
        state: started
        restart_policy: always
        ports:
          - "3000:3000"
        volumes:
          - "/opt/grafana:/var/lib/grafana"
